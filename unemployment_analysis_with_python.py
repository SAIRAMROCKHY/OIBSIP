# -*- coding: utf-8 -*-
"""UNEMPLOYMENT ANALYSIS WITH PYTHON.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1RuHLAeKKIac-MYXNP_DB3qGdstZSXrw7
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import plotly.express as px
import seaborn as sns
import datetime as dt

df=pd.read_csv('/content/Unemployment in India.csv')
df.head(10)

x=df['Region']
y=df[' Estimated Unemployment Rate (%)']

fg = px.bar(df,x='Region',y=' Estimated Unemployment Rate (%)',color='Region',title='Unemployment rate',animation_frame=' Date',template='plotly')
fg.update_layout(xaxis={'categoryorder':'total descending'})
fg.show()

df.rename(columns={'Region':'States',' Date':'Date',' Estimated Unemployment Rate (%)':'Estimated Unemployment Rate (%)',' Estimated Employed':'Estimated Employed',' Estimated Labour Participation Rate (%)':'Estimated Labour Participation Rate'},inplace=True)

df['Date'] = pd.to_datetime(df['Date'])
df['Month']=df['Date'].dt.month_name()
df['Year']=df['Date'].dt.year
df.head(10)

plot_ump = df[['Estimated Unemployment Rate (%)','States']]
df_unemp = plot_ump.groupby('States').mean().reset_index()
df_unemp = df_unemp.sort_values('Estimated Unemployment Rate (%)')
fig = px.bar(df_unemp, x='States',y='Estimated Unemployment Rate (%)',color='States',
            title='Average Unemployment Rate in each state',template='plotly')
fig.show()

unemplo_df = df[['States','Estimated Unemployment Rate (%)','Estimated Employed','Estimated Labour Participation Rate']]
unemplo = unemplo_df.groupby(['States'])['Estimated Unemployment Rate (%)'].mean().reset_index()
fig = px.sunburst(unemplo, path=['States'], values='Estimated Unemployment Rate (%)',
                  color_continuous_scale='Plasma',title= 'unemployment rate in each region and state',
                  height=650,template='ggplot2')
fig.show()

fig = px.box(df,x='States',y='Estimated Unemployment Rate (%)',color='States',title='Unemployment rate',template='plotly')
fig.update_layout(xaxis={'categoryorder':'total descending'})
fig.show()

